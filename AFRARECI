#!/bin/bash 

# El propósito de este comando es detectar la llegada de archivos al directorio NOVEDIR 
#y aceptar o rechazar estos archivos según corresponda"
# 	Es el segundo en orden de ejecución
# 	Es un proceso del tipo “Demonio” :
# 	Se dispara con AFINI o a través del Arrancar
# 	Se detiene a través del Detener
# 	Mueve los archivos a través del MoverA
# 	Graba en el archivo de Log a través del GraLog
# 	Invoca, si corresponde, el siguiente proceso: AFRAUMBR

SLEEP_TIME=20
num_ciclo=0

function log_info(){
    "$BINDIR"/GraLog.sh "AFRARECI" "$1" "INFO"
}

function log_error(){
    "$BINDIR"/GraLog.sh "AFRARECI" "$1" "ERR"
}

#verifica si un archivo es tipo texto
function verificar_tipo(){	
	local f_tipo=`file $1`
	local tipo=`echo $f_tipo | sed 's/^\(.*\):\(.*\)/\2/g'`	

	if !(echo $tipo | grep '^.*text.*$' &>/dev/null) 
		then 
			rechazar_archivo $1
			log_info "Rechazado  ${1##*/}  - Tipo invalido : $tipo"
			return 1
		else
			return 0
	fi
}

function verificar_fecha(){
	if [ $2 -le $1 -a $1 -le $3 ]
	 then
		return 0
	 else
		return 1		
	fi
}

function rechazar_archivo(){
	log_info "Movido ${1##*/} - Destino $RECHDIR/${1##*/}"
	MoverA.sh  $1 $RECHDIR AFRARECI
	return 0
}

function get_pid(){
    local pid=`ps -e | grep '\($BINDIR\)\?/$1.sh' | sed 's/ \?\([0-9]*\).*/\1/' | awk '{print $2}' | head -n 1`
    echo $pid
}

function hay_novedades_pendientes(){
  if [ "$(ls -A $1)" ]
  then
    for directorio in $1
     do
      local dir=`find $directorio -type f | wc -l`
	    if [ ! $dir -eq 0 ]
	    then
		    return 0
	    fi
    done
  fi
  return 1
}

# Si existen archivos en los subdirectorios de ACEPDIR se invoca el comando AFRAUMBR
# Si se pudo invocar se graba en LOG: AFRAUMBR corriendo bajo el no.: <Process Id de AFRAUMBR>
# Si hay archivos pero esta corriendo se graba en LOG: Posponer a siguiente Ciclo
# Si surge algun error se muestra por pantalla

function novedades_pedientes(){
	if hay_novedades_pendientes $ACEPDIR;
		then
		PID=$(get_pid AFRAUMBR)

		if [ "$PID" = "" ]; 
		then
			#ejecutar AFRAUMBR
			#QUIEN LOGUEA QUE ARRANCO? ---> SUPONGO QUE LO HACE EL MISMO
			return 0
		else
			log_info "Invocacion de AFRAUMBR propuesta para el siguiente ciclo"
			return 0
		fi
	fi
	return 0
}

#verfica que los archivos tengan cod_central dentro de maestro

function verificar_cod_central(){
		
local cod_central=`echo ${1##*/} | sed 's/^\(.*\)_\(.*\)/\1/g'`

if !(grep "^$cod_central;.*;" "$2" &>/dev/null)
	then
		rechazar_archivo $1
		log_info "Rechazado ${1##*/} - [$cod_central] Central inexistente"
		return 1
	else
		return 0
fi
}

function procesar_novedades(){
	if hay_novedades_pendientes $NOVEDIR
		then
		for file in $NOVEDIR
		do
			#1) Verificar si es tipo texto
			#2) Verificar que el formato del nombre del archivo sea correcto
				#FORMATO CORRECTO: <cod_central>_<aniomesdia>
			#3) Validar nombre de los archivos
					#cod_central tiene que estar en el maestro de centrales
					#aniomesdia tiene que ser fecha valida, maximo un año de antiguedad
						#y tiene que ser menor que  o igual a la fecha actual
			#4) Si es valido lo anterior se tienene que pasar a ACEPTADOS
			#5) Caso de que no cumpla 1 o 2 o 3 rechazar (moverlo a RECHDIR)
				#logear --> Nombre archivo {Razon del rechazo}
			#6) Ver si hay novedades pendientes
			echo "algo"
		done
}


while [[ true ]]; do
	logInfo "Despertando demonio - Ciclo: $num_ciclo"
	##procesar_novedades <--- proximamente
	novedades_pedientes
	let num_ciclo++
	log_info "Durmiendo demonio"
	sleep $SLEEP_TIME
done

